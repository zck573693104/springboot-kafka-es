server.port=8083
#============== kafka ===================
# 指定kafka server的地址，集群配多个，中间，逗号隔开
es_serverUris=http://localhost:9200
kafka.consumer.servers=localhost:9092
kafka.consumer.enable.auto.commit=true
kafka.consumer.session.timeout=6000
kafka.consumer.auto.commit.interval=100
kafka.consumer.auto.offset.reset=latest
kafka.consumer.topic=test
kafka.consumer.concurrency=10

kafka.producer.servers=localhost:9092
#procedure要求leader在考虑完成请求之前收到的确认数，用于控制发送记录在服务端的持久化，其值可以为如下：
#acks = 0 如果设置为零，则生产者将不会等待来自服务器的任何确认，该记录将立即添加到套接字缓冲区并视为已发送。在这种情况下，无法保证服务器已收到记录，并且重试配置将不会生效（因为客户端通常不会知道任何故障），为每条记录返回的偏移量始终设置为-1。
#acks = 1 这意味着leader会将记录写入其本地日志，但无需等待所有副本服务器的完全确认即可做出回应，在这种情况下，如果leader在确认记录后立即失败，但在将数据复制到所有的副本服务器之前，则记录将会丢失。
#acks = all 这意味着leader将等待完整的同步副本集以确认记录，这保证了只要至少一个同步副本服务器仍然存活，记录就不会丢失，这是最强有力的保证，这相当于acks = -1的设置。
#可以设置的值为：all, -1, 0, 1
kafka.producer.acks=1
#如果请求失败，生产者会自动重试，我们指定是0次，如果启用重试，则会有重复消息的可能性。
kafka.producer.retries=0
#producer(生产者)缓存每个分区未发送消息。缓存的大小是通过 batch.size 配置指定的
kafka.producer.batch.size=4096
kafka.producer.linger=1
kafka.producer.buffer.memory=40960